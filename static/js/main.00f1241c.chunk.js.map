{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["placeholder","App","state","text","handleChange","e","setState","target","value","this","markdown","marked","breaks","className","id","onChange","dangerouslySetInnerHTML","__html","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAKMA,EAAW,ypCAyFFC,E,4MA3CbC,MAAQ,CACNC,KAAMH,G,EAERI,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,KAAME,EAAEE,OAAOC,S,4CAQnB,WACE,IAAOL,EAAQM,KAAKP,MAAbC,KACDO,EAAWC,IAAOR,EAAM,CAACS,QAAQ,IAEvC,OACE,iCACA,gCACE,oBAAIC,UAAU,kBAAd,mCACA,sBAAKA,UAAU,MAAMC,GAAG,OAAxB,UAEE,sBAAKD,UAAU,QAAf,UACA,qDACE,0BAAUA,UAAU,mBAAmBC,GAAG,SAASN,MAAOL,EAAMY,SAAUN,KAAKL,kBAGjF,sBAAKS,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,6BACA,qBAAKA,UAAU,UAAUC,GAAG,UAAUE,wBAAyB,CAACC,OAAQP,oB,GA/BlEQ,aCtCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00f1241c.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport './App.scss';\nimport marked from 'marked'\n\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nclass App extends Component{\n  state = {\n    text: placeholder\n  }\n  handleChange = (e) => {\n    this.setState({\n      text: e.target.value\n    })\n\n  }\n  \n  \n\n\n  render() {\n    const {text} = this.state\n    const markdown = marked(text, {breaks: true})\n    \n    return(\n      <header>\n      <div>\n        <h1 className=\"text-center m-4\">Convert your Markdown</h1>\n        <div className=\"row\" id=\"rows\">\n          \n          <div className=\"col-6\">\n          <h5>Enter your markdown</h5>\n            <textarea className=\"form-control p-2\" id=\"editor\" value={text} onChange={this.handleChange} />\n          </div>\n\n          <div className=\"col-6\" >\n            <h5 className=\"text-center\">See the result:</h5>\n            <div className=\"preview\" id=\"preview\" dangerouslySetInnerHTML={{__html: markdown}} />\n          </div>\n\n        </div>\n      </div>\n      </header>\n\n    )\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}